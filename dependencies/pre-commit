#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
against=HEAD
		else
# Initial commit: diff against an empty tree object
against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

#Limpiamos el repositorio
#make clean
gtags

flag=0

#ejecutable
cd dependencies/repos/google-astyle/
g++ *cpp
cd -

COMMONFLAGS="--style=linux -T -H -U -F -L -w -K -p -k3 -j"

for file in $(git diff-index --cached --name-only HEAD)
do
	if [ $(echo $file | grep -ce '\.[hc]p*$') -ne 0 ]
	then
		TMP=$(./dependencies/google-astyle/a.out --mode=c    $COMMONFLAGS "$file" | grep -c Formatted)
	fi

	if [ $(echo $file | grep -ce '\.java') -ne 0 ]
	then
		TMP=$(./dependencies/google-astyle/a.out --mode=java $COMMONFLAGS "$file" | grep -c Formatted)
	fi

	((flag += TMP))
done

if [ $flag -ge 1 ]; then
	echo "Some code has been formated, try your commit again..."
fi

exit $flag
